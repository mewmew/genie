// Code generated by "string2enum -type BasicType -pkg mdutil -linecomment ../ctype"; DO NOT EDIT.

package mdutil

import "fmt"
import "github.com/mewmew/genie/ctype"

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the string2enum command to generate them again.
	var x [1]struct{}
	_ = x[ctype.BasicTypeVoid-1]
	_ = x[ctype.BasicTypeChar-2]
	_ = x[ctype.BasicTypeSChar-3]
	_ = x[ctype.BasicTypeUChar-4]
	_ = x[ctype.BasicTypeShort-5]
	_ = x[ctype.BasicTypeShortInt-6]
	_ = x[ctype.BasicTypeSShort-7]
	_ = x[ctype.BasicTypeSShortInt-8]
	_ = x[ctype.BasicTypeUShort-9]
	_ = x[ctype.BasicTypeUShortInt-10]
	_ = x[ctype.BasicTypeInt-11]
	_ = x[ctype.BasicTypeSigned-12]
	_ = x[ctype.BasicTypeSInt-13]
	_ = x[ctype.BasicTypeUnsigned-14]
	_ = x[ctype.BasicTypeUInt-15]
	_ = x[ctype.BasicTypeLong-16]
	_ = x[ctype.BasicTypeLongInt-17]
	_ = x[ctype.BasicTypeSLong-18]
	_ = x[ctype.BasicTypeSLongInt-19]
	_ = x[ctype.BasicTypeULong-20]
	_ = x[ctype.BasicTypeULongInt-21]
	_ = x[ctype.BasicTypeLongLong-22]
	_ = x[ctype.BasicTypeLongLongInt-23]
	_ = x[ctype.BasicTypeSLongLong-24]
	_ = x[ctype.BasicTypeSLongLongInt-25]
	_ = x[ctype.BasicTypeULongLong-26]
	_ = x[ctype.BasicTypeULongLongInt-27]
	_ = x[ctype.BasicTypeFloat-28]
	_ = x[ctype.BasicTypeDouble-29]
	_ = x[ctype.BasicTypeLongDouble-30]
}

const _BasicType_name = "voidcharsigned charunsigned charshortshort intsigned shortsigned short intunsigned shortunsigned short intintsignedsigned intunsignedunsigned intlonglong intsigned longsigned long intunsigned longunsigned long intlong longlong long intsigned long longsigned long long intunsigned long longunsigned long long intfloatdoublelong double"

var _BasicType_index = [...]uint16{0, 4, 8, 19, 32, 37, 46, 58, 74, 88, 106, 109, 115, 125, 133, 145, 149, 157, 168, 183, 196, 213, 222, 235, 251, 271, 289, 311, 316, 322, 333}

func BasicTypeFromString(s string) ctype.BasicType {
	if len(s) == 0 {
		return 0
	}
	for i := range _BasicType_index[:len(_BasicType_index)-1] {
		if s == _BasicType_name[_BasicType_index[i]:_BasicType_index[i+1]] {
			return ctype.BasicType(i + 1)
		}
	}
	panic(fmt.Errorf("unable to locate BasicType enum corresponding to %q", s))
}
